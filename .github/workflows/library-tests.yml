name: Library Tests

on:
  push:
    branches:
      - main
      - v2/library-monorepo
    paths:
      - 'projects/room-planner-lib/**'
      - 'package.json'
      - 'angular.json'
      - 'tsconfig.json'
  pull_request:
    paths:
      - 'projects/room-planner-lib/**'
      - 'package.json'
      - 'angular.json'
      - 'tsconfig.json'

jobs:
  test-library:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."

          # First, temporarily remove the problematic dependency from sample app
          cd projects/room-planner-app
          cp package.json package.json.backup
          # Remove the local file dependency temporarily
          node -e "
            const pkg = JSON.parse(require('fs').readFileSync('package.json', 'utf8'));
            delete pkg.dependencies['@ramiz4/room-planner'];
            require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "
          cd ../..

          # Now install all dependencies
          pnpm install --no-frozen-lockfile

          # Restore the original package.json
          cd projects/room-planner-app
          mv package.json.backup package.json
          cd ../..

          echo "Dependencies installed successfully"

      - name: Lint library
        run: pnpm run lint

      - name: Test library
        run: pnpm run test:ci

      - name: Build library
        run: pnpm run build:lib

      - name: Verify library package
        run: |
          echo "ðŸ“¦ Library package verification..."
          ls -la dist/room-planner-lib/
          echo "âœ… Package contents:"
          cat dist/room-planner-lib/package.json | jq '.'
          echo "âœ… Checking public API exports..."
          test -f dist/room-planner-lib/public-api.d.ts
          echo "âœ… Checking compiled bundles..."
          test -f dist/room-planner-lib/fesm2022/room-planner.mjs
          echo "ðŸ“‹ Library verification complete!"

      - name: Test library installation
        run: |
          echo "ðŸ§ª Testing library installation..."
          cd /tmp
          npm init -y
          npm install $GITHUB_WORKSPACE/dist/room-planner-lib
          echo "âœ… Library installation test passed!"

      - name: Comment PR with library info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const packageJson = JSON.parse(fs.readFileSync('dist/room-planner-lib/package.json', 'utf8'));

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ“¦ Library Build Summary

            âœ… **Library tests passed**
            âœ… **Library built successfully**

            **Package Details:**
            - **Name:** \`${packageJson.name}\`
            - **Version:** \`${packageJson.version}\`
            - **Size:** \`$(du -h dist/room-planner-lib | cut -f1)\`

            **Available in this PR:**
            - Library source code changes
            - Updated tests and documentation
            - Ready for testing in sample app

            **Next Steps:**
            - Test the library changes in the sample app
            - Verify all functionality works as expected
            - Ready for merge when approved
            `
            });
